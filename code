library(tidyverse)
library(ggplot2)
library(lubridate)
library(dplyr)
library(readr)
library(janitor)
library(data.table)
library(tidyr)
library(skimr)


tripdata_202012 <- read.csv(file = "C:/Users/Noel/Desktop/Google Data Analytics/Capstone Data/202012-divvy-tripdata.csv")
tripdata_202101 <- read.csv(file = "C:/Users/Noel/Desktop/Google Data Analytics/Capstone Data/202101-divvy-tripdata.csv")
tripdata_202102 <- read.csv(file = "C:/Users/Noel/Desktop/Google Data Analytics/Capstone Data/202102-divvy-tripdata.csv")
tripdata_202103 <- read.csv(file = "C:/Users/Noel/Desktop/Google Data Analytics/Capstone Data/202103-divvy-tripdata.csv")
tripdata_202104 <- read.csv(file = "C:/Users/Noel/Desktop/Google Data Analytics/Capstone Data/202104-divvy-tripdata.csv")
tripdata_202105 <- read.csv(file = "C:/Users/Noel/Desktop/Google Data Analytics/Capstone Data/202105-divvy-tripdata.csv")
tripdata_202106 <- read.csv(file = "C:/Users/Noel/Desktop/Google Data Analytics/Capstone Data/202106-divvy-tripdata.csv")
tripdata_202107 <- read.csv(file = "C:/Users/Noel/Desktop/Google Data Analytics/Capstone Data/202107-divvy-tripdata.csv")
tripdata_202108 <- read.csv(file = "C:/Users/Noel/Desktop/Google Data Analytics/Capstone Data/202108-divvy-tripdata.csv")
tripdata_202109 <- read.csv(file = "C:/Users/Noel/Desktop/Google Data Analytics/Capstone Data/202109-divvy-tripdata.csv")
tripdata_202110 <- read.csv(file = "C:/Users/Noel/Desktop/Google Data Analytics/Capstone Data/202110-divvy-tripdata.csv")
tripdata_202111 <- read.csv(file = "C:/Users/Noel/Desktop/Google Data Analytics/Capstone Data/202111-divvy-tripdata.csv")


colnames(tripdata_202012)
colnames(tripdata_202101)
colnames(tripdata_202102)
colnames(tripdata_202103)
colnames(tripdata_202104)
colnames(tripdata_202105)
colnames(tripdata_202106)
colnames(tripdata_202107)
colnames(tripdata_202108)
colnames(tripdata_202109)
colnames(tripdata_202110)
colnames(tripdata_202111)


str(tripdata_202012)
str(tripdata_202101)
str(tripdata_202102)
str(tripdata_202103)
str(tripdata_202104)
str(tripdata_202105)
str(tripdata_202106)
str(tripdata_202107)
str(tripdata_202108)
str(tripdata_202109)
str(tripdata_202110)
str(tripdata_202111)


all_trips <- bind_rows(tripdata_202012, tripdata_202101, tripdata_202102, tripdata_202103, 
                       tripdata_202104, tripdata_202105, tripdata_202106, tripdata_202107,
                       tripdata_202108, tripdata_202109, tripdata_202110, tripdata_202111)
str(all_trips)


all_trips[['started_at']] <- ymd_hms(all_trips[['started_at']])
all_trips[['ended_at']] <- ymd_hms(all_trips[['ended_at']])
str(all_trips)


all_trips <- all_trips %>%
  select(-c(start_lat:end_lng))
glimpse(all_trips)


all_trips <- all_trips %>%
  rename(ride_type = rideable_type, 
         start_time = started_at,
         end_time = ended_at,
         customer_type = member_casual)
glimpse(all_trips)


#column for day of the week the trip started
all_trips$day_of_the_week <- format(as.Date(all_trips$start_time),'%a')
#column for month when the trip started
all_trips$month <- format(as.Date(all_trips$start_time),'%b_%y')
#column for time of the day when the trip started
#Time element needs to be extracted from start_time. However, as the times must be in POSIXct
#(only times of class POSIXct are supported in ggplot2), a two-step conversion is needed. 
#First the time is converted to a character vector, effectively stripping all the date information. 
#The time is then converted back to POSIXct with today’s date – the date is of no interest to us,
#only the hours-minutes-seconds are.
all_trips$time <- format(all_trips$start_time, format = "%H:%M")
all_trips$time <- as.POSIXct(all_trips$time, format = "%H:%M")
#column for trip duration in min
all_trips$trip_duration <- (as.double(difftime(all_trips$end_time, all_trips$start_time)))/60
#check the dataframe
glimpse(all_trips)

#checking for trip lengths less than 0
nrow(subset(all_trips,trip_duration < 0))
#checking for testrides that were made by company for quality checks
nrow(subset(all_trips, start_station_name %like% "TEST"))
nrow(subset(all_trips, start_station_name %like% "test"))
nrow(subset(all_trips, start_station_name %like% "Test"))


#remove negative trip durations 
all_trips_v2 <- all_trips[!(all_trips$trip_duration < 0),]
#remove test rides
all_trips_v2<- all_trips_v2[!((all_trips_v2$start_station_name %like% "TEST" | all_trips_v2$start_station_name %like% "test")),]
#check dataframe
glimpse(all_trips_v2)

#checking count of distinct values
table(all_trips_v2$customer_type)
#aggregating total trip duration by customer type
setNames(aggregate(trip_duration ~ customer_type, all_trips_v2, sum), c("customer_type", "total_trip_duration(mins)"))


#################################Analysis#################################

#statictical summary of trip_duration for all trips
summary(all_trips_v2$trip_duration)


#statistical summary of trip_duration by customer_type
all_trips_v2 %>%
  group_by(customer_type) %>%
  summarise(min_trip_duration = min(trip_duration),
            max_trip_duration = max(trip_duration),
            median_trip_duration = median(trip_duration), 
            mean_trip_duration = mean(trip_duration))


#fix the order for the day_of_the_week and month variable so that they show up 
#in the same sequence in output tables and visualizations
all_trips_v2$day_of_the_week <- ordered(all_trips_v2$day_of_the_week, levels=c("Mon", "Tue", "Wed", "Thu", 
                                                                               "Fri", "Sat", "Sun"))
all_trips_v2$month <- ordered(all_trips_v2$month, levels=c("Dec_20", "Jan_21", "Feb_21", "Mar_21", 
                                                           "Apr_21", "May_21", "Jun_21", "Jul_21", 
                                                           "Aug_21", "Sep_21", "Oct_21", "Nov_21"))
all_trips_v2 %>% 
  group_by(customer_type, day_of_the_week) %>%  
  summarise(number_of_rides = n(),average_duration_mins = mean(trip_duration)) %>% 
  arrange(customer_type, desc(number_of_rides))


all_trips_v2 %>%  
  group_by(customer_type, day_of_the_week) %>% 
  summarise(number_of_rides = n()) %>% 
  arrange(customer_type, day_of_the_week)  %>% 
  ggplot(aes(x = day_of_the_week, y = number_of_rides, fill = customer_type)) +
  labs(title ="Total trips by customer type Vs. Day of the week") +
  geom_col(width=0.5, position = position_dodge(width=0.5)) +
  scale_y_continuous(labels = function(x) format(x, scientific = FALSE))


unique(all_trips$month)
all_trips_v2 %>% 
  group_by(customer_type, month) %>%  
  summarise(number_of_rides = n(),average_duration_(mins) = mean(trip_duration)) %>% 
  arrange(customer_type,desc(number_of_rides))


all_trips_v2 %>%  
  group_by(customer_type, month) %>% 
  summarise(number_of_rides = n()) %>% 
  arrange(customer_type, month)  %>% 
  ggplot(aes(x = month, y = number_of_rides, fill = customer_type)) +
  labs(title ="Total trips by customer type Vs. Month") +
  theme(axis.text.x = element_text(angle = 30)) +
  geom_col(width=0.5, position = position_dodge(width=0.5)) +
  scale_y_continuous(labels = function(x) format(x, scientific = FALSE))


all_trips_v2 %>%  
  group_by(customer_type, day_of_the_week) %>% 
  summarise(average_trip_duration = mean(trip_duration)) %>%
  ggplot(aes(x = day_of_the_week, y = average_trip_duration, fill = customer_type)) +
  geom_col(width=0.5, position = position_dodge(width=0.5)) + 
  labs(title ="Average trip duration by customer type Vs. Day of the week")


all_trips_v2 %>%  
  group_by(customer_type, month) %>% 
  summarise(average_trip_duration = mean(trip_duration)) %>%
  ggplot(aes(x = month, y = average_trip_duration, fill = customer_type)) +
  geom_col(width=0.5, position = position_dodge(width=0.5)) + 
  labs(title ="Average trip duration by customer type Vs. Month") +
  theme(axis.text.x = element_text(angle = 30))


all_trips_v2 %>%  
  group_by(customer_type, time) %>% 
  summarise(number_of_trips = n()) %>%
  ggplot(aes(x = time, y = number_of_trips, color = customer_type, group = customer_type)) +
  geom_line() +
  scale_x_datetime(date_breaks = "1 hour", minor_breaks = NULL,
                   date_labels = "%H:%M", expand = c(0,0)) +
  theme(axis.text.x = element_text(angle = 90)) +
  labs(title ="Demand over 24 hours of a day", x = "Time of the day")


all_trips_v2 %>%
  group_by(ride_type, customer_type) %>%
  summarise(number_of_trips = n()) %>%  
  ggplot(aes(x= ride_type, y=number_of_trips, fill= customer_type))+
  geom_bar(stat='identity') +
  scale_y_continuous(labels = function(x) format(x, scientific = FALSE)) +
  labs(title ="Ride type Vs. Number of trips")


clean_data <- aggregate(all_trips_v2$trip_duration ~ all_trips_v2$customer_type + all_trips_v2$day_of_the_week, FUN = mean)
write.csv(clean_data, "Clean Data.csv", row.names = F)
